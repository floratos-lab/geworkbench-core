/* Generated By:JJTree&JavaCC: Do not edit this line. DSLParserConstants.java */
package edu.ksu.cis.bnj.bbn.converter.dsl;

/*
 * 
 * This file is part of Bayesian Network for Java (BNJ).
 *
 * BNJ is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * BNJ is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with BNJ in LICENSE.txt file; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 * 
 */

/**
 * @author: Roby Joehanes
 */
public interface DSLParserConstants {

    int EOF = 0;
    int SINGLE_LINE_COMMENT = 10;
    int FORMAL_COMMENT = 11;
    int MULTI_LINE_COMMENT = 12;
    int NET = 14;
    int NODE = 15;
    int INTEGER_LITERAL = 16;
    int DECIMAL_LITERAL = 17;
    int HEX_LITERAL = 18;
    int OCTAL_LITERAL = 19;
    int FLOATING_POINT_LITERAL = 20;
    int EXPONENT = 21;
    int STRING_LITERAL = 22;
    int IDENTIFIER = 23;
    int LETTER = 24;
    int DIGIT = 25;
    int LPAREN = 26;
    int RPAREN = 27;
    int LBRACE = 28;
    int RBRACE = 29;
    int LBRACKET = 30;
    int RBRACKET = 31;
    int SEMICOLON = 32;
    int COMMA = 33;
    int DOT = 34;
    int ASSIGN = 35;
    int GT = 36;
    int LT = 37;
    int BANG = 38;
    int TILDE = 39;
    int HOOK = 40;
    int COLON = 41;
    int EQ = 42;
    int LE = 43;
    int GE = 44;
    int NE = 45;
    int SC_OR = 46;
    int SC_AND = 47;
    int SC_XOR = 48;
    int INCR = 49;
    int DECR = 50;
    int PLUS = 51;
    int MINUS = 52;
    int STAR = 53;
    int SLASH = 54;
    int BIT_AND = 55;
    int BIT_OR = 56;
    int BIT_XOR = 57;
    int LSHIFT = 58;
    int RSIGNEDSHIFT = 59;
    int RUNSIGNEDSHIFT = 60;
    int PLUSASSIGN = 61;
    int MINUSASSIGN = 62;
    int STARASSIGN = 63;
    int SLASHASSIGN = 64;
    int ANDASSIGN = 65;
    int ORASSIGN = 66;
    int XORASSIGN = 67;
    int REMASSIGN = 68;
    int LSHIFTASSIGN = 69;
    int RSIGNEDSHIFTASSIGN = 70;
    int RUNSIGNEDSHIFTASSIGN = 71;
    int TOWARD = 72;
    int ASG_OPR = 73;

    int DEFAULT = 0;
    int IN_SINGLE_LINE_COMMENT = 1;
    int IN_FORMAL_COMMENT = 2;
    int IN_MULTI_LINE_COMMENT = 3;

    String[] tokenImage = {"<EOF>", "\" \"", "\"\\t\"", "\"\\n\"", "\"\\r\"", "\"\\f\"", "\"//\"", "\"%\"", "<token of kind 8>", "\"/*\"", "<SINGLE_LINE_COMMENT>", "\"*/\"", "\"*/\"", "<token of kind 13>", "\"net\"", "\"node\"", "<INTEGER_LITERAL>", "<DECIMAL_LITERAL>", "<HEX_LITERAL>", "<OCTAL_LITERAL>", "<FLOATING_POINT_LITERAL>", "<EXPONENT>", "<STRING_LITERAL>", "<IDENTIFIER>", "<LETTER>", "<DIGIT>", "\"(\"", "\")\"", "\"{\"", "\"}\"", "\"[\"", "\"]\"", "\";\"", "\",\"", "\".\"", "\"=\"", "\">\"", "\"<\"", "\"!\"", "\"~\"", "\"?\"", "\":\"", "\"==\"", "\"<=\"", "\">=\"", "\"!=\"", "\"||\"", "\"&&\"", "\"^^\"", "\"++\"", "\"--\"", "\"+\"", "\"-\"", "\"*\"", "\"/\"", "\"&\"", "\"|\"", "\"^\"", "\"<<\"", "\">>\"", "\">>>\"", "\"+=\"", "\"-=\"", "\"*=\"", "\"/=\"", "\"&=\"", "\"|=\"", "\"^=\"", "\"%=\"", "\"<<=\"", "\">>=\"", "\">>>=\"", "\"->\"", "<ASG_OPR>", };

}
