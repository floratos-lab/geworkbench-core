package org.geworkbench.bison.algorithm.crossvalidation;

import org.geworkbench.bison.algorithm.classification.DSClassifier;
import org.geworkbench.bison.datastructure.biocollections.classification.DSTrainingSet;
import org.geworkbench.bison.datastructure.bioobjects.DSClassification;
import org.geworkbench.bison.datastructure.bioobjects.DSParameters;
import org.geworkbench.bison.datastructure.exceptions.DSInitException;
import org.geworkbench.bison.datastructure.exceptions.DSRunException;

import java.util.Collection;

/**
 * An interface for cross-validation.
 */
public interface DSCrossValidation <T> {

    /**
     * Initialize the cross-validator
     *
     * @param classifier the classifier with which to validate.
     * @throws DSInitException if it is unable to initialize the validator with the given classifier.
     */
    void init(DSClassifier<T> classifier) throws DSInitException;

    /**
     * Runs a cross-validation on the given training set.
     *
     * @param trainingSet the training set with which to validate.
     * @return the classification of the training set generated by the validator.
     * @throws DSRunException if an exception was encountered while running the cross-validation.
     */
    Collection<DSClassification<T>> run(DSTrainingSet<T> trainingSet) throws DSRunException;

    /**
     * Sets the parameters of this cross-validation.
     *
     * @param parameters the new parameters.
     */
    void setParameters(DSParameters parameters);
}
